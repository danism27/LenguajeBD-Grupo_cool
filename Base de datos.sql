-- Eliminar tablas si existen
DROP TABLE IF EXISTS VEHICULOS;
DROP TABLE IF EXISTS OFICINAS;
DROP TABLE IF EXISTS REPUESTOS;
DROP TABLE IF EXISTS CONTACTOS;
DROP TABLE IF EXISTS DETALLE_FACTURA;
DROP TABLE IF EXISTS FACTURAS;
DROP TABLE IF EXISTS SERVICIOS;
DROP TABLE IF EXISTS EMPLEADOS;
DROP TABLE DETALLE_FACTURA;
--------------------------------------------------------------------------------
-- Crear tabla de contactos
CREATE TABLE CONTACTOS(
    ID_CONTACTO INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    TIPO_CONTACTO VARCHAR2(50) NOT NULL, -- Cliente, Proveedor, Taller
    COD_CONTACTO INTEGER NOT NULL,
    NOMBRE_CONTACTO VARCHAR2(100) NOT NULL,
    DIRECCION_CONTACTO VARCHAR2(100),
    TELEFONO_CONTACTO VARCHAR2(100),
    EMAIL_CONTACTO VARCHAR2(100),
    CONSTRAINT PK_CONTACTOS PRIMARY KEY (ID_CONTACTO)
);
-- Insertar contactos
SELECT * FROM CONTACTOS;
INSERT INTO CONTACTOS (TIPO_CONTACTO, COD_CONTACTO, NOMBRE_CONTACTO, DIRECCION_CONTACTO, TELEFONO_CONTACTO, EMAIL_CONTACTO)
VALUES ('Cliente', 201, 'Juan Perez', 'Calle Falsa 123', '555-1234', 'juan.perez@example.com');

INSERT INTO CONTACTOS (TIPO_CONTACTO, COD_CONTACTO, NOMBRE_CONTACTO, DIRECCION_CONTACTO, TELEFONO_CONTACTO, EMAIL_CONTACTO)
VALUES ('Proveedor', 202, 'Maria Gomez', 'Avenida Siempre Viva 742', '555-5678', 'maria.gomez@example.com');

INSERT INTO CONTACTOS (TIPO_CONTACTO, COD_CONTACTO, NOMBRE_CONTACTO, DIRECCION_CONTACTO, TELEFONO_CONTACTO, EMAIL_CONTACTO)
VALUES ('Cliente', 203, 'Carlos Sanchez', 'Boulevard de los Sueños Rotos 99', '555-8765', 'carlos.sanchez@example.com');

INSERT INTO CONTACTOS (TIPO_CONTACTO, COD_CONTACTO, NOMBRE_CONTACTO, DIRECCION_CONTACTO, TELEFONO_CONTACTO, EMAIL_CONTACTO)
VALUES ('Proveedor', 204, 'Ana Martinez', 'Calle Luna 45', '555-4321', 'ana.martinez@example.com');

INSERT INTO CONTACTOS (TIPO_CONTACTO, COD_CONTACTO, NOMBRE_CONTACTO, DIRECCION_CONTACTO, TELEFONO_CONTACTO, EMAIL_CONTACTO)
VALUES ('Cliente', 205, 'Luis Rodriguez', 'Calle Sol 67', '555-9876', 'luis.rodriguez@example.com');
--------------------------------------------------------------------------------
-- Crear tabla de facturas
CREATE TABLE FACTURAS(
    ID_FACTURA INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    COD_FACTURA INTEGER NOT NULL,
    COD_CLIENTE INTEGER NOT NULL,
    FECHA_FACTURA DATE NOT NULL,
    TOTAL_FACTURA NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_FACTURAS PRIMARY KEY (ID_FACTURA),
    CONSTRAINT FK_FACTURAS_CONTACTOS FOREIGN KEY (COD_CLIENTE) REFERENCES CONTACTOS(ID_CONTACTO)
);
-- Insertar FACTURAS
SELECT * FROM FACTURAS;

INSERT INTO FACTURAS (COD_FACTURA, COD_CLIENTE, FECHA_FACTURA, TOTAL_FACTURA)
VALUES (1001, 1, TO_DATE('2023-01-15', 'YYYY-MM-DD'), 1500.00);

INSERT INTO FACTURAS (COD_FACTURA, COD_CLIENTE, FECHA_FACTURA, TOTAL_FACTURA)
VALUES (1002, 3, TO_DATE('2023-02-20', 'YYYY-MM-DD'), 2000.00);

INSERT INTO FACTURAS (COD_FACTURA, COD_CLIENTE, FECHA_FACTURA, TOTAL_FACTURA)
VALUES (1003, 5, TO_DATE('2023-03-10', 'YYYY-MM-DD'), 1800.00);

INSERT INTO FACTURAS (COD_FACTURA, COD_CLIENTE, FECHA_FACTURA, TOTAL_FACTURA)
VALUES (1004, 1, TO_DATE('2023-04-05', 'YYYY-MM-DD'), 2200.00);

INSERT INTO FACTURAS (COD_FACTURA, COD_CLIENTE, FECHA_FACTURA, TOTAL_FACTURA)
VALUES (1005, 3, TO_DATE('2023-05-15', 'YYYY-MM-DD'), 2500.00);
--------------------------------------------------------------------------------
-- Crear tabla de repuestos
CREATE TABLE REPUESTOS(
    ID_REPUESTO INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    COD_REPUESTO INTEGER NOT NULL,
    NOMBRE_REPUESTO VARCHAR2(100) NOT NULL,
    FECHA_REGISTRO DATE NOT NULL,
    NOMBRE_USUARIO VARCHAR2(100),
    CONSTRAINT PK_REPUESTOS PRIMARY KEY (ID_REPUESTO)
);
-- Insertar REPUESTOS
SELECT * FROM REPUESTOS;

INSERT INTO REPUESTOS (COD_REPUESTO, NOMBRE_REPUESTO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES (301, 'Filtro de aire', TO_DATE('2023-01-01', 'YYYY-MM-DD'), 'admin');

INSERT INTO REPUESTOS (COD_REPUESTO, NOMBRE_REPUESTO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES (302, 'Batería', TO_DATE('2023-02-01', 'YYYY-MM-DD'), 'admin');

INSERT INTO REPUESTOS (COD_REPUESTO, NOMBRE_REPUESTO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES (303, 'Aceite de motor', TO_DATE('2023-03-01', 'YYYY-MM-DD'), 'admin');

INSERT INTO REPUESTOS (COD_REPUESTO, NOMBRE_REPUESTO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES (304, 'Filtro de combustible', TO_DATE('2023-04-01', 'YYYY-MM-DD'), 'admin');

INSERT INTO REPUESTOS (COD_REPUESTO, NOMBRE_REPUESTO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES (305, 'Pastillas de freno', TO_DATE('2023-05-01', 'YYYY-MM-DD'), 'admin');

--------------------------------------------------------------------------------
CREATE TABLE DETALLE_FACTURA(
    ID_DETALLE_FACTURA INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    COD_FACTURA INTEGER NOT NULL,
    COD_REPUESTO INTEGER NOT NULL,
    CANTIDAD INTEGER NOT NULL,
    CONSTRAINT PK_DETALLE_FACTURA PRIMARY KEY (ID_DETALLE_FACTURA),
    CONSTRAINT FK_DETALLE_FACTURA_FACTURAS FOREIGN KEY (COD_FACTURA) REFERENCES FACTURAS(ID_FACTURA),
    CONSTRAINT FK_DETALLE_FACTURA_REPUESTOS FOREIGN KEY (COD_REPUESTO) REFERENCES REPUESTOS(ID_REPUESTO)
);
-- Insertar DETALLE_FACTURA
SELECT * FROM DETALLE_FACTURA;
INSERT INTO DETALLE_FACTURA (COD_FACTURA, COD_REPUESTO, CANTIDAD)
VALUES (1, 1, 4);

INSERT INTO DETALLE_FACTURA (COD_FACTURA, COD_REPUESTO, CANTIDAD)
VALUES (2, 2, 2);

INSERT INTO DETALLE_FACTURA (COD_FACTURA, COD_REPUESTO, CANTIDAD)
VALUES (3, 3, 6);

INSERT INTO DETALLE_FACTURA (COD_FACTURA, COD_REPUESTO, CANTIDAD)
VALUES (4, 4, 1);

INSERT INTO DETALLE_FACTURA (COD_FACTURA, COD_REPUESTO, CANTIDAD)
VALUES (5, 5, 1);
--------------------------------------------------------------------------------
-- Crear tabla de oficinas
CREATE TABLE OFICINAS(
    ID_OFICINA INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NOMBRE_OFICINA VARCHAR2(50) NOT NULL,
    FECHA_REGISTRO DATE NOT NULL,
    CONSTRAINT PK_OFICINAS PRIMARY KEY (ID_OFICINA)
);
-- Insertar OFICINAS
SELECT * FROM OFICINAS;
INSERT INTO OFICINAS (NOMBRE_OFICINA, FECHA_REGISTRO)
VALUES ('Oficina Central', TO_DATE('2023-01-10', 'YYYY-MM-DD'));

INSERT INTO OFICINAS (NOMBRE_OFICINA, FECHA_REGISTRO)
VALUES ('Sucursal Norte', TO_DATE('2023-02-15', 'YYYY-MM-DD'));

INSERT INTO OFICINAS (NOMBRE_OFICINA, FECHA_REGISTRO)
VALUES ('Sucursal Sur', TO_DATE('2023-03-20', 'YYYY-MM-DD'));

INSERT INTO OFICINAS (NOMBRE_OFICINA, FECHA_REGISTRO)
VALUES ('Sucursal Este', TO_DATE('2023-04-25', 'YYYY-MM-DD'));

INSERT INTO OFICINAS (NOMBRE_OFICINA, FECHA_REGISTRO)
VALUES ('Sucursal Oeste', TO_DATE('2023-05-30', 'YYYY-MM-DD'));
--------------------------------------------------------------------------------
-- Crear tabla de vehículos
CREATE TABLE VEHICULOS(
    ID_VEHICULO INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NUM_PLACA VARCHAR2(100) NOT NULL,
    TIPO_VEHICULO VARCHAR2(100),
    ESTADO_VEHICULO VARCHAR2(100),
    MARCA VARCHAR2(100),
    MODELO VARCHAR2(100),
    FECHA_REGISTRO DATE NOT NULL,
    NOMBRE_USUARIO VARCHAR2(100),
    CONSTRAINT PK_VEHICULOS PRIMARY KEY (ID_VEHICULO)
);
-- Insertar VEHICULOS

SELECT * FROM VEHICULOS;

INSERT INTO VEHICULOS (NUM_PLACA, TIPO_VEHICULO, ESTADO_VEHICULO, MARCA, MODELO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES ('ABC-123', 'Sedan', 'Activo', 'Toyota', 'Corolla', TO_DATE('2023-01-10', 'YYYY-MM-DD'), 'admin');

INSERT INTO VEHICULOS (NUM_PLACA, TIPO_VEHICULO, ESTADO_VEHICULO, MARCA, MODELO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES ('DEF-456', 'SUV', 'Activo', 'Honda', 'CR-V', TO_DATE('2023-02-15', 'YYYY-MM-DD'), 'admin');

INSERT INTO VEHICULOS (NUM_PLACA, TIPO_VEHICULO, ESTADO_VEHICULO, MARCA, MODELO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES ('GHI-789', 'Truck', 'Inactivo', 'Ford', 'F-150', TO_DATE('2023-03-20', 'YYYY-MM-DD'), 'admin');

INSERT INTO VEHICULOS (NUM_PLACA, TIPO_VEHICULO, ESTADO_VEHICULO, MARCA, MODELO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES ('JKL-012', 'Coupe', 'Activo', 'Chevrolet', 'Camaro', TO_DATE('2023-04-25', 'YYYY-MM-DD'), 'admin');

INSERT INTO VEHICULOS (NUM_PLACA, TIPO_VEHICULO, ESTADO_VEHICULO, MARCA, MODELO, FECHA_REGISTRO, NOMBRE_USUARIO)
VALUES ('MNO-345', 'Hatchback', 'Activo', 'Volkswagen', 'Golf', TO_DATE('2023-05-30', 'YYYY-MM-DD'), 'admin');
--------------------------------------------------------------------------------
-- Crear tabla de servicios
CREATE TABLE SERVICIOS(
    ID_SERVICIO INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    COD_SERVICIO INTEGER NOT NULL,
    NOMBRE_SERVICIO VARCHAR2(100) NOT NULL,
    DESCRIPCION_SERVICIO VARCHAR2(100),
    PRECIO_SERVICIO NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_SERVICIOS PRIMARY KEY (ID_SERVICIO)
);
-- Insertar SERVICIOS
SELECT * FROM SERVICIOS;

INSERT INTO SERVICIOS (COD_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, PRECIO_SERVICIO)
VALUES (101, 'Cambio de Aceite', 'Cambio de aceite de motor', 50.00);

INSERT INTO SERVICIOS (COD_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, PRECIO_SERVICIO)
VALUES (102, 'Alineación y Balanceo', 'Servicio de alineación y balanceo de neumáticos', 75.00);

INSERT INTO SERVICIOS (COD_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, PRECIO_SERVICIO)
VALUES (103, 'Lavado de Carro', 'Lavado completo del vehículo', 25.00);

INSERT INTO SERVICIOS (COD_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, PRECIO_SERVICIO)
VALUES (104, 'Revisión de Frenos', 'Inspección y ajuste de frenos', 100.00);

INSERT INTO SERVICIOS (COD_SERVICIO, NOMBRE_SERVICIO, DESCRIPCION_SERVICIO, PRECIO_SERVICIO)
VALUES (105, 'Cambio de Batería', 'Reemplazo de batería del vehículo', 150.00);
--------------------------------------------------------------------------------
-- Crear tabla de EMPLEADOS
CREATE TABLE EMPLEADOS(
    ID_EMPLEADO INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    NOMBRE_EMPLEADO VARCHAR2(100) NOT NULL,
    APELLIDO_EMPLEADO VARCHAR2(100) NOT NULL,
    CARGO_EMPLEADO VARCHAR2(100) NOT NULL,
    FECHA_CONTRATACION DATE NOT NULL,
    SALARIO NUMBER(10, 2) NOT NULL,
    CONSTRAINT PK_EMPLEADOS PRIMARY KEY (ID_EMPLEADO)
);
-- Insertar EMPLEADOS
SELECT * FROM EMPLEADOS;

INSERT INTO EMPLEADOS (NOMBRE_EMPLEADO, APELLIDO_EMPLEADO, CARGO_EMPLEADO, FECHA_CONTRATACION, SALARIO)
VALUES ('Juan', 'Perez', 'Gerente', TO_DATE('2023-01-10', 'YYYY-MM-DD'), 5000.00);

INSERT INTO EMPLEADOS (NOMBRE_EMPLEADO, APELLIDO_EMPLEADO, CARGO_EMPLEADO, FECHA_CONTRATACION, SALARIO)
VALUES ('Maria', 'Gomez', 'Asistente', TO_DATE('2023-02-15', 'YYYY-MM-DD'), 3000.00);

INSERT INTO EMPLEADOS (NOMBRE_EMPLEADO, APELLIDO_EMPLEADO, CARGO_EMPLEADO, FECHA_CONTRATACION, SALARIO)
VALUES ('Carlos', 'Sanchez', 'Contador', TO_DATE('2023-03-20', 'YYYY-MM-DD'), 4000.00);

INSERT INTO EMPLEADOS (NOMBRE_EMPLEADO, APELLIDO_EMPLEADO, CARGO_EMPLEADO, FECHA_CONTRATACION, SALARIO)
VALUES ('Ana', 'Martinez', 'Secretaria', TO_DATE('2023-04-25', 'YYYY-MM-DD'), 2500.00);

INSERT INTO EMPLEADOS (NOMBRE_EMPLEADO, APELLIDO_EMPLEADO, CARGO_EMPLEADO, FECHA_CONTRATACION, SALARIO)
VALUES ('Luis', 'Rodriguez', 'Supervisor', TO_DATE('2023-05-30', 'YYYY-MM-DD'), 4500.00);

--------------------------------------------------------------------------------
-- ID_OFICINA: Columna de tipo INTEGER, equivalente a NUMBER(38) en Oracle.
-- GENERADO AUTOMÁTICAMENTE CON AS IDENTITY: La columna usa una secuencia implícita para generar valores únicos automáticamente.
-- START WITH 1: El valor inicial de la secuencia es 1.
-- INCREMENT BY 1: Cada nuevo valor generado aumenta en 1 respecto al anterior.
--------------------------------------------------------------------------------

-- CONSTRAINT PK_OFICINAS PRIMARY KEY (ID_OFICINA):
-- Define la restricción de clave primaria llamada PK_OFICINAS en la columna ID_OFICINA.
-- Garantiza que los valores en ID_OFICINA sean únicos y no nulos.
-- Crea automáticamente un índice para mejorar el rendimiento en búsquedas y consultas.
--------------------------------------------------------------------------------